AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Simple API Endpoint configured using Swagger specified inline and backed by a Lambda function
Resources:
  MyApi:
    Type: AWS::Serverless::Api
    Properties:
        StageName: prod
        DefinitionBody:
            swagger: 2.0
            info:
              title: AI Customer Service API
              description: 'AI Customer Service application, built during the Cloud and Big Data course at Columbia University.'
              version: 1.0.0
            schemes:
              - https
            basePath: /v1
            produces:
              - application/json
            paths:
              /chatbot:
                post:
                  summary: The endpoint for the Natural Language Understanding API.
                  description: |
                    This API takes in one or more messages from the client and returns
                    one or more messages as a response. The API leverages the NLP
                    backend functionality, paired with state and profile information
                    and returns a context-aware reply.
                  tags:
                    - NLU
                  operationId: sendMessage
                  produces:
                    - application/json
                  parameters:
                    - name: body
                      in: body
                      required: true
                      schema:
                        $ref: '#/definitions/BotRequest'
                  x-amazon-apigateway-integration:
                    httpMethod: POST
                    type: aws_proxy
                    uri:
                      Fn::Sub: arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${MessageLambda.Arn}/invocations
                  responses:
                    '200':
                      description: A Chatbot response
                      schema:
                        $ref: '#/definitions/BotResponse'
                    '403':
                      description: Unauthorized
                      schema:
                        $ref: '#/definitions/Error'
                    '500':
                      description: Unexpected error
                      schema:
                        $ref: '#/definitions/Error'
            definitions:
              BotRequest:
                type: object
                properties:
                  messages:
                    type: array
                    items:
                      $ref: '#/definitions/Message'
              BotResponse:
                type: object
                properties:
                  messages:
                    type: array
                    items:
                      $ref: '#/definitions/Message'
              Message:
                type: object
                properties:
                  type:
                    type: string
                  unstructured:
                    $ref: '#/definitions/UnstructuredMessage'
              UnstructuredMessage:
                type: object
                properties:
                  id:
                    type: string
                  text:
                    type: string
                  timestamp:
                    type: string
                    format: datetime
              Error:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string


  MessageLambda:
    Type: AWS::Serverless::Function
    Properties:
      Handler: app.message_lambda_handler
      Runtime: python3.7
      CodeUri: src/
      Events:
        chatbotApi:
          Type: Api
          Properties:
            Path: /chatbot
            Method: POST
            RestApiId:
                Ref: MyApi

Outputs:

    ApiURL:
      Description: "API endpoint URL for Prod environment"
      Value: !Sub "https://${MyApi}.execute-api.${AWS::Region}.amazonaws.com/prod/v1/chatbot"
